saveFig = true;

[f, s, z] = readSparamFile('ANTBRXB.s1p');

y = [min(s), max(s)];
gsm = [890, 915, 935, 960] * 1e6;

% Gain
Gtmax = max(abs(s))^2;
gg = find(abs(s).^2 == Gtmax);

% Attenuation
ss = [find(f <= gsm(3), 1, 'last'), find(f >= gsm(4), 1, 'first')];
ll = (ss(1)-1) * [1 1];
ss = abs(s(ss(1) : ss(2))) .^2;
ll = ll + [find(ss == max(ss)), find(ss == min(ss))];
L = 1 ./ ([max(ss), mean(ss), min(ss)]);

% 3 dB BW
ff = find(abs(s) == max(abs(s))) * [1 1];
ff(1) = find(abs(s(1 : ff(1))).^2 <= Gtmax / 2, 1, 'last');
ff(2) = ff(2)-1 + find(abs(s(ff(2) : end)).^2 <= Gtmax / 2, 1, 'first');

% Noise BW
Bn = 1/Gtmax * sum(diff(f) .* abs(s(1:end-1)) .^ 2);
i = floor(Bn / mean(diff(f(ff(1) : ff(2)))));
ss = abs(s(ff(1) : ff(1) + i)).^2;
k = [1 i];
for j = 1 : ff(2) - (ff(1)+i)
	sss = abs(s(ff(1) + j : ff(1) + j + i)).^2;
	if (sum(sss) > sum(ss))
		k(1) = j;
	end
end

figure(1);
clf;
hold on;
% GSM bands
for i = 1 : 4
    plot(gsm(i) * [1 1] / 1e6, 20*log10(abs(y)) + 8 * [-1 1], 'r', 'linewidth', 1);
end

arrow(  [gsm(1) / 1e6, 20*log10(abs(y(1))) - 4], ... 
        [gsm(2) / 1e6, 20*log10(abs(y(1))) - 4], ...
        'Ends', 'Both', 'Length', 10, 'BaseAngle', 75, 'TipAngle', 15, ...
		'FaceColor', 'r', 'EdgeColor', 'r');
arrow(  [gsm(3) / 1e6, 20*log10(abs(y(1))) - 4], ... 
        [gsm(4) / 1e6, 20*log10(abs(y(1))) - 4], ...
        'Ends', 'Both', 'Length', 10, 'BaseAngle', 75, 'TipAngle', 15, ...
		'FaceColor', 'r', 'EdgeColor', 'r');
	
text(	mean(gsm(1:2)/1e6), ...
		20*log10(abs(y(1))) - 12, ...
		'BS RX: $$890 - 915$$ MHz',...
		'HorizontalAlignment',  'center', ... 
		'Interpreter',          'latex', ...
		'BackgroundColor',      'w', ...
		'color',				'r');
text(	mean(gsm(3:4)/1e6), ...
		20*log10(abs(y(1))) - 12, ...
		'BS TX: $$935 - 960$$ MHz' ,...
		'HorizontalAlignment',  'center', ... 
		'Interpreter',          'latex', ...
		'BackgroundColor',      'w', ...
		'color',				'r');

% 3 dB BW
for i = 1 : 2
	plot(f(ff(i)) * [1 1] / 1e6, 20*log10(abs(y)) + 8 * [-1 1], 'b', 'linewidth', 1);
end

arrow(  [f(ff(1)) / 1e6, 20*log10(abs(y(1))) + 40], ... 
        [f(ff(2)) / 1e6, 20*log10(abs(y(1))) + 40], ...
        'Ends', 'Both', 'Length', 10, 'BaseAngle', 75, 'TipAngle', 15, ...
		'FaceColor', 'b', 'EdgeColor', 'b');
	
text(	mean(f(ff(1:2))/1e6), ...
		20*log10(abs(y(1))) + 40 - 8, ...
		sprintf('3 dB BW: %.1f MHz', diff(f(ff)) / 1e6), ...
		'HorizontalAlignment',  'center', ... 
		'Interpreter',          'latex', ...
		'BackgroundColor',      'w', ...
		'color',				'b');
	
text(	mean(f(ff(1:2))/1e6), ...
		20*log10(abs(y(1))) + 40 - 8 - 10, ...
		sprintf('$$%.1f - %.1f$$ MHz', ...
			f(ff(1)) / 1e6, f(ff(2)) / 1e6), ...
		'HorizontalAlignment',  'center', ... 
		'Interpreter',          'latex', ...
		'BackgroundColor',      'w', ...
		'color',				'b');

% Noise BW
for i = 1 : 2
	plot(f(ff(1)+sum(k(1:i))) * [1 1] / 1e6, 20*log10(abs(y)) + 8 * [-1 1], 'g', 'linewidth', 1);
end

h = plot(f / 1e6, 20*log10(abs(s)), 'k', 'linewidth', 2);

arrow(  [f(ff(1) + sum(k(1:1))) / 1e6, 20*log10(abs(y(1))) + 84], ... 
        [f(ff(1) + sum(k(1:2))) / 1e6, 20*log10(abs(y(1))) + 84], ...
        'Ends', 'Both', 'Length', 10, 'BaseAngle', 75, 'TipAngle', 15, ...
		'FaceColor', 'g', 'EdgeColor', 'g');
	
text(	mean([f(ff(1) + sum(k(1:1))), f(ff(1) + sum(k(1:2)))]) / 1e6, ...
		20*log10(abs(y(1))) + 84 - 8, ...
		sprintf('``Noise BW'''': %.1f MHz', Bn / 1e6), ...
		'HorizontalAlignment',  'center', ... 
		'Interpreter',          'latex', ...
		'BackgroundColor',      'w', ...
		'color',				'g');

	text(	mean([f(ff(1) + sum(k(1:1))), f(ff(1) + sum(k(1:2)))]) / 1e6, ...
		20*log10(abs(y(1))) + 84 - 8 - 10, ...
		sprintf('$$%.1f - %.1f$$ MHz', ...
			f(ff(1) + sum(k(1:1))) / 1e6, f(ff(1) + sum(k(1:2))) / 1e6), ...
		'HorizontalAlignment',  'center', ... 
		'Interpreter',          'latex', ...
		'BackgroundColor',      'w', ...
		'color',				'g');

% Gains / Attenuations
text(	mean(gsm(3:4)/1e6), ...
		20*log10(abs(y(2))) - 10, ...
		sprintf('$$|S_{12}|_\\mathrm{max} = %.1f$$ dB ($$f = %.1f$$ MHz)', ...
			10*log10(Gtmax), f(gg) / 1e6), ...
		'HorizontalAlignment',  'center', ... 
		'Interpreter',          'latex', ...
		'BackgroundColor',      'w', ...
		'color',				'k');
	
text(	mean(gsm(3:4)/1e6), ...
		20*log10(abs(y(2))) - 25, ...
		sprintf('$$L_\\mathrm{TX,\\;avg} = %.1f$$ dB', 10*log10(L(2))), ...
		'HorizontalAlignment',  'center', ... 
		'Interpreter',          'latex', ...
		'BackgroundColor',      'w', ...
		'color',				'k');
	
text(	mean(gsm(3:4)/1e6), ...
		20*log10(abs(y(2))) - 40, ...
		sprintf('$$L_\\mathrm{TX,\\;min} = %.1f$$ dB ($$f = %.1f$$ MHz)', ...
			10*log10(L(1)), f(ll(1)) / 1e6), ...
		'HorizontalAlignment',  'center', ... 
		'Interpreter',          'latex', ...
		'BackgroundColor',      'w', ...
		'color',				'k');
	
text(	mean(gsm(3:4)/1e6), ...
		20*log10(abs(y(2))) - 55, ...
		sprintf('$$L_\\mathrm{TX,\\;max} = %.1f$$ dB ($$f = %.1f$$ MHz)', ...
			10*log10(L(3)), f(ll(2)) / 1e6), ...
		'HorizontalAlignment',  'center', ... 
		'Interpreter',          'latex', ...
		'BackgroundColor',      'w', ...
		'color',				'k');

hold off;
grid on;

x = 850:10:970;
xlim([min(x), max(x)]);
set(gca, 'XTickMode', 'Manual');
set(gca, 'XTick', x);
set(gca, 'XTickLabel', ...
    cellfun(@num2str, {x'}, 'UniformOutput', false));

title('GSM Base Station Pre-Amplifier Block: $$\mathrm{ANT_B \rightarrow RX_{B1}}$$', 'interpreter', 'latex');
ylabel('$$|S_{12}|$$ [dB]', 'interpreter', 'latex');
xlabel('$$f$$ [MHz]', 'interpreter', 'latex');

if true
exportfig(gcf, 'dpx2.eps', ...
	'width',		18, ...
	'height',		10, ...
	'color',		'rgb', ...
	'resolution',	300, ...
	'LockAxes',		1, ...
	'FontMode',		'fixed', ...
	'FontSize',		9, ...
	'LineMode',		'scaled'	);
end


Psg = [ -40		-30		-25		-20		-15		-10		-9		-8		-7		-6		-5		-4		-3		-2 ];
Psa = [ -15.90	-5.90	-0.91	4.14	9.13	14.24	15.21	16.10	16.84	17.47	18.13	18.62	19.03	19.36];

Gatt = -19.95;
Gthin = -0.20;
Gthick = -0.30;

Pin = Psg + Gthin;
Pout = Psa - Gthick;
G = Pout - Pin;

PPin = -45:0.01:0.0;
PPout = interp1(Pin, Pout, PPin, 'spline', 'extrap');
GG = PPout - PPin;


PPPout = 1.005*PPin + 24.8;
idx = round(mean([find(PPPout - PPout <= 1.0, 1, 'last') find(PPPout - PPout >= 1.0, 1, 'first')]));

figure(2);
clf;
hold on;
plot([min(PPin), PPin(idx)], PPout(idx) * [1 1], 'k');
plot(PPin(idx) * [1 1], [min(PPout) PPout(idx)], 'k');
plot(PPin, PPPout, 'color', 'r', 'linewidth', 2);
plot(Pin, Pout, 'bo', 'linewidth', 2, 'markersize', 6);
plot(PPin, PPout, 'b', 'linewidth', 2);
ylim([-20 25]);
xlim([-45 0]);
title(sprintf('$$P_\\mathrm{1\\;dB,\\;in} = %+.1f $$ dBm, $$P_\\mathrm{1\\;dB,\\;out} = %+.1f $$ dBm, $$|S_{21}|_\\mathrm{avg} = %.1f $$ dB', PPin(idx), PPout(idx), mean(GG(1:idx))), 'interpreter', 'latex');
ylabel('$$P_\mathrm{out}$$ [dB]', 'interpreter', 'latex');
xlabel('$$P_\mathrm{in}$$ [dBm]', 'interpreter', 'latex');
grid on;
hold off;

if true
exportfig(gcf, 'PoutPin1.eps', ...
	'width',		18, ...
	'height',		10, ...
	'color',		'rgb', ...
	'resolution',	300, ...
	'LockAxes',		1, ...
	'FontMode',		'fixed', ...
	'FontSize',		9, ...
	'LineMode',		'scaled'	);
end


GGG = 24.5800;
idx2 = round(mean([find(GGG-GG <= 1.0, 1, 'last') find(GGG - GG >= 1.0, 1, 'first')]));

figure(3);
clf;
hold on;
plot([min(PPin), PPin(idx2)], GG(idx2) * [1 1], 'k');
plot(PPin(idx2) * [1 1], [min(GG) GG(idx2)], 'k');
plot([PPin(1) PPin(end)], GGG * [1 1], 'color', 'r', 'linewidth', 2);
plot(Pin, G, 'bo', 'linewidth', 2, 'markersize', 6);
plot(PPin, GG, 'b', 'linewidth', 2);
hold off;
ylim([23 25]);
xlim([-45 0]);
title(sprintf('$$|S_{21}|_\\mathrm{avg} = %.1f $$ dB, $$P_\\mathrm{1\\;dB,\\;in} = %+.1f $$ dBm', GGG, PPin(idx2)), 'interpreter', 'latex');
ylabel('$$|S_{21}|$$ [dB]', 'interpreter', 'latex');
xlabel('$$P_\mathrm{in}$$ [dBm]', 'interpreter', 'latex');
grid on;

if true
exportfig(gcf, 'GPin1.eps', ...
	'width',		18, ...
	'height',		10, ...
	'color',		'rgb', ...
	'resolution',	300, ...
	'LockAxes',		1, ...
	'FontMode',		'fixed', ...
	'FontSize',		9, ...
	'LineMode',		'scaled'	);
end

figure(4);
clf;
hold on;
plot([min(PPout), PPout(idx2)], GG(idx2) * [1 1], 'k');
plot(PPout(idx2) * [1 1], [min(GG) GG(idx2)], 'k');
plot([PPout(1) PPout(end)], GGG * [1 1], 'color', 'r', 'linewidth', 2);
plot(Pout, G, 'bo', 'linewidth', 2, 'markersize', 6);
plot(PPout, GG, 'b', 'linewidth', 2);
hold off;
ylim([23 25]);
xlim([-20 20]);
title(sprintf('$$|S_{21}|_\\mathrm{avg} = %.1f $$ dB, $$P_\\mathrm{1\\;dB,\\;out} = %+.1f $$ dBm', GGG, PPout(idx2)), 'interpreter', 'latex');
ylabel('$$|S_{21}|$$ [dB]', 'interpreter', 'latex');
xlabel('$$P_\mathrm{out}$$ [dBm]', 'interpreter', 'latex');
grid on;

if true
exportfig(gcf, 'GPout1.eps', ...
	'width',		18, ...
	'height',		10, ...
	'color',		'rgb', ...
	'resolution',	300, ...
	'LockAxes',		1, ...
	'FontMode',		'fixed', ...
	'FontSize',		9, ...
	'LineMode',		'scaled'	);
end


P1 =	[ -40		-30		-25		-20		-15		-10		-9		-8		-7		-6		-5		-4		-3		-2 ];
S21 =	[ 4.60		4.60	4.60	4.60	4.60	4.63	4.61	4.53	4.38	4.20	4.00	3.60	3.14	2.55];
Gatt = -19.95;
G = S21 - Gatt;
P2 = P1 + G;

PP1 = -45:0.01:0.0;
SS21 = interp1(P1, S21, PP1, 'spline', 'extrap');
GG = SS21 - Gatt;
PP2 = PP1 + GG;

%PPP2 = 1.005*PP1 + 24.8;
%idx = round(mean([find(PPP2 - PP2 <= 1.0, 1, 'last') find(PPP2 - PP2 >= 1.0, 1, 'first')]));

figure(2);
clf;
hold on;
%plot([min(PP1), PP1(idx)], PP2(idx) * [1 1], 'k');
%plot(PP1(idx) * [1 1], [min(PP2) PP2(idx)], 'k');
%plot(PP1, PPP2, 'color', 'r', 'linewidth', 2);
plot(P1, P2, 'bo', 'linewidth', 2, 'markersize', 6);
plot(PP1, PP2, 'b', 'linewidth', 2);
ylim([-20 25]);
xlim([-45 0]);
%title(sprintf('$$P_\\mathrm{1\\;dB,\\;in} = %+.1f $$ dBm, $$P_\\mathrm{1\\;dB,\\;out} = %+.1f $$ dBm, $$|S_{21}|_\\mathrm{avg} = %.1f $$ dB', PP1(idx), PP2(idx), mean(GG(1:idx))), 'interpreter', 'latex');
ylabel('$$P_\mathrm{out}$$ [dB]', 'interpreter', 'latex');
xlabel('$$P_\mathrm{in}$$ [dBm]', 'interpreter', 'latex');
grid on;
hold off;

if true
exportfig(gcf, 'PoutPin2.eps', ...
	'width',		18, ...
	'height',		10, ...
	'color',		'rgb', ...
	'resolution',	300, ...
	'LockAxes',		1, ...
	'FontMode',		'fixed', ...
	'FontSize',		9, ...
	'LineMode',		'scaled'	);
end


%GGG = 24.5800;
%idx2 = round(mean([find(GGG-GG <= 1.0, 1, 'last') find(GGG - GG >= 1.0, 1, 'first')]));

figure(3);
clf;
hold on;
%plot([min(PP1), PP1(idx2)], GG(idx2) * [1 1], 'k');
%plot(PP1(idx2) * [1 1], [min(GG) GG(idx2)], 'k');
%plot([PP1(1) PP1(end)], GGG * [1 1], 'color', 'r', 'linewidth', 2);
plot(P1, G, 'bo', 'linewidth', 2, 'markersize', 6);
plot(PP1, GG, 'b', 'linewidth', 2);
hold off;
ylim([23 25]);
xlim([-45 0]);
%title(sprintf('$$|S_{21}|_\\mathrm{avg} = %.1f $$ dB, $$P_\\mathrm{1\\;dB,\\;in} = %+.1f $$ dBm', GGG, PP1(idx2)), 'interpreter', 'latex');
ylabel('$$|S_{21}|$$ [dB]', 'interpreter', 'latex');
xlabel('$$P_\mathrm{in}$$ [dBm]', 'interpreter', 'latex');
grid on;

if true
exportfig(gcf, 'GPin2.eps', ...
	'width',		18, ...
	'height',		10, ...
	'color',		'rgb', ...
	'resolution',	300, ...
	'LockAxes',		1, ...
	'FontMode',		'fixed', ...
	'FontSize',		9, ...
	'LineMode',		'scaled'	);
end

figure(4);
clf;
hold on;
%plot([min(PP2), PP2(idx2)], GG(idx2) * [1 1], 'k');
%plot(PP2(idx2) * [1 1], [min(GG) GG(idx2)], 'k');
%plot([PP2(1) PP2(end)], GGG * [1 1], 'color', 'r', 'linewidth', 2);
plot(P2, G, 'bo', 'linewidth', 2, 'markersize', 6);
plot(PP2, GG, 'b', 'linewidth', 2);
hold off;
ylim([23 25]);
xlim([-20 20]);
%title(sprintf('$$|S_{21}|_\\mathrm{avg} = %.1f $$ dB, $$P_\\mathrm{1\\;dB,\\;out} = %+.1f $$ dBm', GGG, PP2(idx2)), 'interpreter', 'latex');
ylabel('$$|S_{21}|$$ [dB]', 'interpreter', 'latex');
xlabel('$$P_\mathrm{out}$$ [dBm]', 'interpreter', 'latex');
grid on;

if true
exportfig(gcf, 'GPout.eps', ...
	'width',		18, ...
	'height',		10, ...
	'color',		'rgb', ...
	'resolution',	300, ...
	'LockAxes',		1, ...
	'FontMode',		'fixed', ...
	'FontSize',		9, ...
	'LineMode',		'scaled'	);
end
